// ---------------------------------------------
// --------------- Slash Command ---------------
// ---------------------------------------------

const { ChatInputCommandInteraction, EmbedBuilder } = require("discord.js");
const App = require("../../client/App");
const Database = require("../../client/Database");
const ApplicationCommand = require("../../structure/ApplicationCommand");

const db = new Database();

module.exports = new ApplicationCommand({
    command: {
        name: '',
        description: '',
        type: 1,
        options: []
    },
    options: {
        cooldown: 10000
    },
    /**
     * 
     * @param {App} client 
     * @param {ChatInputCommandInteraction} interaction 
     */
    run: async (client, interaction) => {
        
    }
}).toJSON();

// -----------------------------------------------
// --------------- Message Command ---------------
// -----------------------------------------------

const { Message, EmbedBuilder } = require("discord.js");
const App = require("../../client/App");
const Database = require("../../client/Database");
const MessageCommand = require("../../structure/MessageCommand");
const config = require("../../config");

const db = new Database();

module.exports = new MessageCommand({
    command: {
        name: '',
        description: '',
        aliases: ['']
    },
    options: {
        cooldown: 10000
    },
    /**
     * 
     * @param {App} client 
     * @param {Message} message 
     * @param {string[]} args
     */
    run: async (client, message, args) => {

    }
}).toJSON();

// ---------------------------------------------
// --------------- Event Example ---------------
// ---------------------------------------------

// For Event Names / Parameters: https://gist.github.com/Iliannnn/f4985563833e2538b1b96a8cb89d72bb 
// (Event Cheatsheet)

const { success } = require("../../utils/Console");
const Event = require("../../structure/Event");
const Database = require("../../client/Database");

module.exports = new Event({
    event: '',
    once: true / false,
    run: (__client__, client) => {
        
    }
}).toJSON();
